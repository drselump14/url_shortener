openapi: "3.0.1"
info:
  description: "URL shortener API"
  version: "1.0.0"
  title: "URL shortener API"
  contact:
    email: "cakmet14@gmail.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "lin.ks"
basePath: "/v1"
tags:
- name: "short_url"
  description: "Operations about url"
- name: "oauth2"
  description: "Fetch access_token and refresh_token"
schemes:
- "https"
security:
  - ApiKeyAuth: []
  - BasicAuth: []
paths:
  /short_urls:
    post:
      security:
        - ApiKeyAuth: []
      tags:
      - "short_url"
      summary: "Create URL"
      operationId: "createURL"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Created URL object"
        required: true
        schema:
          $ref: "#/components/schemas/URLRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/URLResponse"
    get:
      security:
        - ApiKeyAuth: []
      tags:
        - "short_url"
      summary: "Get list of shortened-url"
      description: ""
      operationId: "getURLByName"
      produces:
      - "application/json"
      parameters:
      responses:
        "200":
          content:
            application/json:
              description: "successful operation"
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/URLResponse"
        "400":
          description: "Invalid URLname supplied"
        "404":
          description: "URL not found"
  /short_urls/{short_url_key}:
    put:
      security:
        - ApiKeyAuth: []
      tags:
        - "short_url"
      summary: "Updated URL"
      description: "This can only be done by the logged in URL."
      operationId: "updateURL"
      produces:
      - "application/json"
      parameters:
      - name: "short_url_key"
        in: "path"
        description: "name that need to be updated"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Updated URL object"
        required: true
        schema:
          $ref: "#/components/schemas/URLRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/URLResponse"
        "400":
          description: "Invalid short_url_key supplied"
    delete:
      security:
        - ApiKeyAuth: []
      tags:
      - "short_url"
      summary: "Delete URL"
      description: "This can only be done by the logged in URL."
      operationId: "deleteURL"
      produces:
      - "application/json"
      parameters:
      - name: "short_url_key"
        in: "path"
        description: "The name that needs to be deleted"
        required: true
        type: "string"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/URLResponse"
        "400":
          description: "Invalid short_url_key supplied"
  /oauth2/token:
    post:
      security:
        - BasicAuth: []
      tags:
      - "oauth2"
      summary: "fetch access_token"
      operationId: "fetchAccessToken"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Created URL object"
        required: true
        schema:
          type: object
          properties:
            refresh_token:
              type: string
              example: refresh_token
              description: |
                required if grant_type is refresh_token
            grant_type:
              type: string
              enum:
                - client_credentials
                - refresh_token
              example: refresh_token
            client_id:
              type: string
              example: client_id
              description: |
                required if grant_type is client_credentials
          required:
            - grant_type
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                    example: access_token
                  refresh_token:
                    type: string
                    example: refresh_token
                  expires_in:
                    type: number
                    example: 3600
                  token_type:
                    type: string
                    example: Bearer
                required:
                  - access_token
                  - refresh_token
                  - expires_in
                  - token_type
components:
  securitySchemes:
    ApiKeyAuth:
      type: "apiKey"
      name: "Authorization"
      in: "header"
    BasicAuth:
      type: http
      scheme: basic
  schemas:
    URLRequest:
      type: "object"
      properties:
        full_url:
          type: "string"
      required:
        - full_url
      example:
        full_url: "https://www.google.com"
    URLResponse:
      type: "object"
      properties:
        full_url:
          type: "string"
        short_url:
          type: "string"
      required:
        - full_url
        - short_url
      example:
        full_url: "https://www.google.com"
        short_url: "https://lin.ks/xCd5a"
